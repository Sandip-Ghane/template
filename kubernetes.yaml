apiVersion: v1
kind: Service
metadata:
  name: backend-golang-service
spec:
  type: NodePort
  selector:
    app: backend-golang
  ports:
    - port: 3000
      nodePort: 30002
      protocol: TCP
      targetPort: ui
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-golang-deployment
  labels:
    app: backend-golang
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-golang
  template:
    metadata:
      labels:
        app: backend-golang
    spec:
      containers:
        - name: backend-golang
          image: localhost:5000/backend-golang:latest
          volumeMounts:
            - name: config-volume
              mountPath: /config/main.yaml
              subPath: main.yaml
          ports:
            - containerPort: 3000
              name: ui
              protocol: TCP
      volumes:
        - name: config-volume
          configMap:
            name: backend-golang-config
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: backend-golang-config
  labels:
    k8s-app: backend-golang-config
data:
  main.yaml: |-
    server:
      name: "backend-golang"
      version: "v1"
      port: 3000
      shutdownTimeout: 0
      heroku: false
      logging: false
      monitoring: false
      https: false

    service:
      database:
        sharepoint:
          siteURL: "https://kasikornbanktest.sharepoint.com"
          username: "nftuser001@kasikornbanktest.onmicrosoft.com"
          password: "P@ssw0rd"
        redis:
          prefix: "bg_"
          password: "admin-issuer"
          host: "redis-10015.c15.us-east-1-2.ec2.cloud.redislabs.com:10015"
          db: 0
        mongodb: 
          user: "nbxtruong"
          password: "nbxtruong"
          hosts: "issuer-8yqw1.mongodb.net"
          db: "backend-golang"
          options:
            - "test"
            - "retryWrites=true"
        collection:
          document: "document"
          user: "user"
      email:
        host: "smtp.gmail.com"
        port: 587
        username: "mdtai1996"
        password: "Kidbanker@1"
        key: "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"
        from: "mdtai1996@gmail.com"
        subject: "Verification code for "
        message: "Your verification code is: "
      newrelic:
        licenseKey: "1d837e515318aae157ae0048cfda41ed18c6a451"
      pgo:
        spaceName: "backend_golang"
      fluent:
        port: 5160
        host: "fluentd-aggregator"
        prefix: "backend"
        tag: "test"
      kafka:
        hosts: 
          - "kafka1:9092"
          - "kafka2:9093"
        partition: 0
      rabbitmq:
        host: "rabbitmq-node-1:5672"
        user: "admin"
        password: "Admin@123"
        route: "#"
      mqtt:
        host: "mqtt:1883"
        qos: 0
        prefixPub: "backend-golang-pub_"
        prefixSub: "backend-golang-sub_"

    defaultAccount:
      username: "admin"
      password: "12345678x@X"

    token:
      accessToken:
        enable: true
        publicKey: "./key/app.rsa.pub"
        privateKey: "./key/app.rsa"
        jwtTimeout: 1
      refreshToken:
        enable: true
        publicKey: "./key/refresh.rsa.pub"
        privateKey: "./key/refresh.rsa"
        jwtTimeout: 24
      otp:
        secretKey: "4S62BZNFXXSZLCRO"
        timeout: 5